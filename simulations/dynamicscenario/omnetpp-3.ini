[General]
network = OnlyDynSource

sim-time-limit = 100s
description = "General configuration"
abstract = true


*.histogramContainer.histograms = {Uplink: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall.xml",
									Downlink: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall.xml",
									Downlink_improve: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall_conv_-1.0_0_50.xml",
									Downlink_worse: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall_conv_1.0_0_50.xml",
									Uplink_improve: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall_conv_-1.0_0_50.xml",
									Uplink_worse: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall_conv_1.0_0_50.xml"
									}

*.*.dstt[*].eth[*].bitrate = 1Gbps
*.*.nwtt.eth[*].bitrate = 1Gbps


[Baseline_Applications]
extends = General
abstract = true
# DELAYS
############################################################################################
*.detComOne.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink_worse")
*.detComOne.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detComOne.dstt[*].delayUplink = rngProvider("histogramContainer","Uplink")
############################################################################################

*.device*.app[*].source.packetNameFormat = "%M-%m-%c"

# client applications

*.device1.numApps = 1
*.device1.app[*].typename = "UdpSourceApp"
*.device1.app[*].source.typename = "DynamicPacketSource"

*.device1.app[0].display-name = "stream5"
*.device1.app[0].io.destAddress = "wirelessdevice1"
*.device1.app[0].io.destPort = 6005
*.device1.app[0].source.packetLength = 1000B - 58B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.device1.app[0].source.productionInterval = 20ms
*.device1.app[0].source.maxLatency = 20ms
*.device1.app[0].source.pcp = 7
#*.device1.app[0].source.enabled = true
#
*.device1.app[0].source.productionOffsets =[10ms, 5ms]

# server applications

*.wirelessdevice1.numApps = 1
*.wirelessdevice1.app[0].typename = "UdpSinkApp"
*.wirelessdevice1.app[0].display-name = "stream5"
*.wirelessdevice1.app[0].io.localPort = 6005

[Offsets]
extends=Baseline_Applications

# enable outgoing streams
*.hasEgressTrafficShaping = true

# enable outgoing streams
*.*device*.hasOutgoingStreams = true

# client stream identification
*.device1.bridging.streamIdentifier.identifier.mapping = [{stream: "tsn", packetFilter: expr(udp.destPort == 6005)}]


*.wirelessdevice1.bridging.streamIdentifier.identifier.mapping = [{stream: "tsn", packetFilter: expr(udp.destPort == 7004)},
																	{stream: "tsn", packetFilter: expr(udp.destPort == 6003)}]

# client stream encoding
*.*device*.bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0}, {stream: "video", pcp: 6}, 
                                                  {stream: "tsn", pcp: 7}]

# enable incoming streams
*.wirelessdevice*.numTraffhasIncomingStreams = true
######################################################################################

# enable streams
*.bridge*.hasIncomingStreams = true
*.bridge*.hasOutgoingStreams = true

*.bridge*.bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "best effort"}, {pcp: 6, stream: "video"},
                                                  {pcp: 7, stream: "tsn"}]

*.bridge*.bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0}, {stream: "video", pcp: 6}, 
                                                  {stream: "tsn", pcp: 7}]

# enable egress traffic shaping
*.bridge*.hasEgressTrafficShaping = true

# time-aware traffic shaping with 5 queues
*.*.eth[*].macLayer.queue.numTrafficClasses = 5
*.*.eth[*].macLayer.queue.queue[0].display-name = "best effort"
*.*.eth[*].macLayer.queue.queue[1].display-name = "excellent effort"
*.*.eth[*].macLayer.queue.queue[2].display-name = "critical"
*.*.eth[*].macLayer.queue.queue[3].display-name = "video"
*.*.eth[*].macLayer.queue.queue[4].display-name = "tsn"

#######################################################################################

# enable streams
*.detCom*.dstt[*].hasIncomingStreams = true
*.detCom*.dstt[*].hasOutgoingStreams = true

*.detCom*.nwtt.hasIncomingStreams = true
*.detCom*.nwtt.hasOutgoingStreams = true

*.detCom*.dstt[*].bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "best effort"}, {pcp: 6, stream: "video"},
                                                  {pcp: 7, stream: "tsn"}]

*.detCom*.dstt[*].bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0}, {stream: "video", pcp: 6},
                                                  {stream: "tsn", pcp: 7}]


# enable egress traffic shaping
*.detCom*.dstt[*].hasEgressTrafficShaping = true
# enable egress traffic shaping
*.detCom*.nwtt[*].hasEgressTrafficShaping = true

# time-aware traffic shaping with 5 queues
*.detCom*.dstt[*].eth[0].macLayer.queue.numTrafficClasses = 5
*.detCom*.dstt[*].eth[0].macLayer.queue.queue[0].display-name = "best effort"
*.detCom*.dstt[*].eth[0].macLayer.queue.queue[1].display-name = "Excellent Effort"
*.detCom*.dstt[*].eth[0].macLayer.queue.queue[2].display-name = "Critical"
*.detCom*.dstt[*].eth[0].macLayer.queue.queue[3].display-name = "video-stream"
*.detCom*.dstt[*].eth[0].macLayer.queue.queue[4].display-name = "tsn"
######################################################################################
# enable streams
*.detCom*.nwtt[*].bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "best effort"}, {pcp: 6, stream: "video"},
                                                  {pcp: 7, stream: "tsn"} ]

*.detCom*.nwtt[*].bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0}, {stream: "video", pcp: 6},
                                                  {stream: "tsn", pcp: 7}]

# time-aware traffic shaping with 5 queues
*.detCom*.nwtt.eth[0].macLayer.queue.numTrafficClasses = 5
*.detCom*.nwtt.eth[0].macLayer.queue.queue[0].display-name = "best effort"
*.detCom*.nwtt.eth[0].macLayer.queue.queue[1].display-name = "excellent effort"
*.detCom*.nwtt.eth[0].macLayer.queue.queue[2].display-name = "critical"
*.detCom*.nwtt.eth[0].macLayer.queue.queue[3].display-name = "video"
*.detCom*.nwtt.eth[0].macLayer.queue.queue[4].display-name = "tsn"
