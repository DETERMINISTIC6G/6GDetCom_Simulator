[General]
seed-set = 0
sim-time-limit = 20s
description = "abstract"

# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# all oscillators have a constant drift rate (specified with a random distribution for each one) 
# except for the master clocks, which have a random drift rate
#**.clock.oscillator.typename = "RandomDriftOscillator"
#*.timeTransmitter.clock.oscillator.typename = "RandomDriftOscillator"  
*.timeTransmitter.clock.oscillator.typename = "RandomDriftOscillator" # use ConstantDriftOscillator for testing in new testing scenario.
**.oscillator.changeInterval = 12.5ms
**.oscillator.driftRate = 0ppm #uniform(-100ppm, 100ppm)  
**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
**.oscillator.driftRateChangeUpperLimit = 100ppm
**.oscillator.driftRateChangeLowerLimit = -100ppm

**.kp=8
**.ki=7
**.offsetThreshold = 0 us
**.useC5Grr = true

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps
*.*.*.eth[*].bitrate = 100Mbps

*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.infoVisualizer[*].displayInfos = true

*.histogramContainer.histograms = {Uplink: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall.xml", Downlink: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall.xml"}

[Config OneMasterClock]
network = TimeSyncNetwork
description = "Basic tree topology with one master clock"

# Uncomment these lines to test out of band time synchronization using the SimpleClockSynchronizer instead of gPTP
#*.tsnClock.gptp.typename = ""
#*.*.gptp.typename = "SimpleClockSynchronizer"
#*.*.gptp.synchronizationInterval = 0.125s
#*.*.gptp.masterClockModule = "^.^.tsnClock.clock"
#*.*.gptp.slaveClockModule = "^.clock"

*.detCom.nwtt.clock.typename = "InstantServoClock"
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnSwitch.clock.adjustDrift = false
*.tsnDevice2.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.timeTransmitter.gptp.masterPorts = ["eth0"]

# TSN switch gPTP bridge master ports
*.detCom.nwtt.gptp.masterPorts = ["tt0", "tt1"]

*.detCom.dstt[*].gptp.masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.slavePort = "tt0"

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "timeTransmitter.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 3
*.visualizer.infoVisualizer[0].modules = "*.timeTransmitter.clock"
*.timeTransmitter.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[1].placementHint = "topLeft"
*.visualizer.infoVisualizer[2].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[2].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

[Config OneMasterClock_StaticDelay]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.dstt[0].delayDownlink = 5ms
*.detCom.dstt[1].delayDownlink = 5ms

[Config OneMasterClock_VarDelay]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")


[Config OneMasterClock_VarDelay_NonQueueing]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.queueingDelayer = false
*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")

[Config OneMasterClock_Uplink]
network = TimeSyncNetworkUplink
description = "Basic tree topology with one master clock"

# Uncomment these lines to test out of band time synchronization using the SimpleClockSynchronizer instead of gPTP
#*.tsnClock.gptp.typename = ""
#*.*.gptp.typename = "SimpleClockSynchronizer"
#*.*.gptp.synchronizationInterval = 0.125s
#*.*.gptp.masterClockModule = "^.^.tsnClock.clock"
#*.*.gptp.slaveClockModule = "^.clock"

*.detCom.nwtt.clock.typename = "InstantServoClock"
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnSwitch.clock.adjustDrift = false
*.tsnDevice1.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.timeTransmitter.gptp.masterPorts = ["eth0"]

*.detCom.dstt[0].gptp.masterPorts = ["tt0", "tt1"]

*.detCom.dstt[1].gptp.masterPorts = ["eth0"]
*.detCom.dstt[1].gptp.slavePort = "tt1"

*.detCom.nwtt.gptp.masterPorts = ["eth0"]
*.detCom.nwtt.gptp.slavePort = "tt0"

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "timeTransmitter.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 3
*.visualizer.infoVisualizer[0].modules = "*.timeTransmitter.clock"
*.timeTransmitter.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[1].placementHint = "topLeft"
*.visualizer.infoVisualizer[2].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[2].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

[Config OneMasterClock_Uplink_StaticDelay]
extends = OneMasterClock_Uplink

*.detCom.dstt[0].delayUplink = 5ms
*.detCom.dstt[1].delayDownlink = 5ms

[Config OneMasterClock_Uplink_VarDelay]
extends = OneMasterClock_Uplink

*.detCom.dstt[0].delayUplink = rngProvider("histogramContainer","Uplink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")


[Config OneMasterClock_Nwtt]
network = TimeSyncNetworkNwttMaster
description = "Basic tree topology with one master clock"

*.detCom.nwtt.clock.oscillator.typename = "RandomDriftOscillator" # use ConstantDriftOscillator for testing in new testing scenario.


*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnDevice1.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.detCom.nwtt.gptp.gptpNodeType = "MASTER_NODE"
*.detCom.nwtt.gptp.masterPorts = ["eth0", "tt0", "tt1"]
*.detCom.nwtt.gptp.slavePort = ""

*.detCom.dstt[*].gptp.masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.slavePort = "tt0"


# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "detCom.nwtt.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 2
*.visualizer.infoVisualizer[0].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[0].placementHint = "topLeft"
*.visualizer.infoVisualizer[1].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[1].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

# TODO: FIX
#*.visualizer.infoVisualizer[2].modules = "*.detCom.nwtt.clock"
#*.detCom.nwtt.clock.displayStringTextFormat = "time: %T"


[Config OneMasterClock_Nwtt_StaticDelay]
extends = OneMasterClock_Nwtt

*.detCom.dstt[0].delayUplink = 5ms
*.detCom.dstt[1].delayDownlink = 5ms

[Config OneMasterClock_Nwtt_VarDelay]
extends = OneMasterClock_Nwtt

*.detCom.dstt[0].delayUplink = rngProvider("histogramContainer","Uplink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")

# -------------------------------------------- 

[Config MultiHop]
network = MultiplehopDualShowcase
description = "Basic tree topology with one master clock and multiple devices"

**.clock.oscillator.typename = "RandomDriftOscillator"

*.numSwitches1 = ${numHops1=1,10,50,100}
*.numSwitches2 = ${numHops2=1,10,50,100}

*.detCom.nwtt.clock.typename = "InstantServoClock"
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnSwitch.clock.adjustDrift = false
*.tsnDevice2.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.timeTransmitter.gptp.masterPorts = ["eth0"] 

*.tsnSwitchnwtt[*].gptp.masterPorts = ["eth1"]

# tsnSwitch1 -> detCom
*.detCom.nwtt.gptp.slavePort = "eth0" 
*.detCom.nwtt.gptp.masterPorts = ["tt0", "tt1"]  

# dstt[0] -> tsnSwitch2 -> device
*.detCom.dstt[*].gptp.masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.slavePort = "tt0"
*.tsnSwitch1[*].gptp.masterPorts = ["eth1"]
*.tsnSwitch1[*].gptp.slavePort = "eth0"
*.tsnSwitch2[*].gptp.masterPorts = ["eth1"]
*.tsnSwitch2[*].gptp.slavePort = "eth0"

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "timeTransmitter.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 3
*.visualizer.infoVisualizer[0].modules = "*.timeTransmitter.clock"
*.timeTransmitter.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[1].placementHint = "topLeft"
*.visualizer.infoVisualizer[2].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[2].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

[Config TwoMasterClocksMultiGptpShowcase]
network = TwoMasterClocksMultiGptpShowcase
description = "Extended basic tree with two master clocks"

*.tsnClock2.clock.typename = "PiServoClock"

*.tsnClock1.gptp.typename = "Gptp"
*.tsnClock1.gptp.clockModule = "tsnClock1.clock"
*.tsnClock1.gptp.masterPorts = ["eth0"]

*.tsnClock2.gptp.typename = "MultiDomainGptp"
*.tsnClock2.gptp.numDomains = 2
*.tsnClock2.gptp.domain[*].clockModule = "tsnClock2.clock"
*.tsnClock2.gptp.domain[0].gptpNodeType = "SLAVE_NODE"
*.tsnClock2.gptp.domain[0].slavePort = "eth0"
*.tsnClock2.gptp.domain[1].gptpNodeType = "MASTER_NODE"
*.tsnClock2.gptp.domain[1].masterPorts = ["eth0"]

# DetCom has multiple clocks
*.detCom.nwtt.clock.typename = "MultiClock"
*.detCom.nwtt.clock.numClocks = 2
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "MultiClock"
*.detCom.dstt[*].clock.numClocks = 2

*.detCom.nwtt.gptp.typename = "MultiDomainGptp"
*.detCom.nwtt.gptp.numDomains = 2
*.detCom.dstt[*].gptp.typename = "MultiDomainGptp"
*.detCom.dstt[*].gptp.numDomains = 2

# each domain in nwtt/dstt --> detcomgptp
*.detCom.nwtt.gptp.domain[*].detComClockModule = "^.^.detComClock"
*.detCom.nwtt.gptp.domain[*].typename = "DetComGptp"
# DetCom has two gptp time synchronization domains
*.detCom.nwtt.gptp.domain[0].slavePort = "eth0"
*.detCom.nwtt.gptp.domain[0].masterPorts = ["tt0", "tt1", "tt2"]
*.detCom.nwtt.gptp.domain[1].slavePort = "tt0"
# TODO: end node
*.detCom.nwtt.gptp.domain[1].masterPorts = ["tt1"]

*.detCom.dstt[*].gptp.domain[*].detComClockModule = "^.^.detComClock"
*.detCom.dstt[*].gptp.domain[*].typename = "DetComGptp"
*.detCom.dstt[*].gptp.domain[0].masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.domain[0].slavePort = "tt0"
*.detCom.dstt[0].gptp.domain[1].masterPorts = ["tt0", "tt1", "tt2"]
*.detCom.dstt[0].gptp.domain[1].slavePort = "eth0"
*.detCom.dstt[*].gptp.domain[1].masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.domain[1].slavePort = "tt1"

# TSN devices have multiple clocks
*.tsnDevice*.clock.typename = "MultiClock"
*.tsnDevice*.clock.numClocks = 2

# TSN devices have multiple gPTP time synchronization domains
*.tsnDevice*.gptp.typename = "MultiDomainGptp"
*.tsnDevice*.gptp.numDomains = 2
*.tsnDevice1.gptp.clockModule = "tsnDevice1.clock"
*.tsnDevice2.gptp.clockModule = "tsnDevice2.clock"
*.tsnDevice*.gptp.domain[*].slavePort = "eth0"

# different initial gPTP pdelay measurement and time synchronization offsets
**.pdelayInitialOffset = 0.1ms
*.*.gptp.domain[0].syncInitialOffset = syncInterval * 1 / 2
*.*.gptp.domain[1].syncInitialOffset = syncInterval * 2 / 2

# set reference clocks so the time difference can be visualized
**.clock[0].referenceClock = "tsnClock1.clock"
**.clock[1].referenceClock = "tsnClock2.clock"

# multiple data link visualizers display different gPTP time synchronization domain packets
*.visualizer.numDataLinkVisualizers = 2
*.visualizer.dataLinkVisualizer[*].displayLinks = true
*.visualizer.dataLinkVisualizer[*].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = expr((has(GptpSync) && GptpSync.domainNumber == 0) || (has(GptpFollowUp) && GptpFollowUp.domainNumber == 0))
*.visualizer.dataLinkVisualizer[1].packetFilter = expr((has(GptpSync) && GptpSync.domainNumber == 1) || (has(GptpFollowUp) && GptpFollowUp.domainNumber == 1))
*.visualizer.dataLinkVisualizer[0].tags = "primary GM"
*.visualizer.dataLinkVisualizer[1].tags = "hot-standby GM"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"
*.visualizer.dataLinkVisualizer[1].lineColor = "red2"

*.visualizer.numInfoVisualizers = 8
*.visualizer.infoVisualizer[0].modules = "*.tsnDevice*.*.clock[0]"
*.visualizer.infoVisualizer[0].textColor = "blue"
*.visualizer.infoVisualizer[1].modules = "*.tsnDevice*.*.clock[1]"
*.visualizer.infoVisualizer[1].textColor = "red"
*.visualizer.infoVisualizer[0..1].placementHint = "bottom"
*.visualizer.infoVisualizer[2].modules = "*.tsnClock1.clock"
*.visualizer.infoVisualizer[3].modules = "*.tsnClock2.clock"
*.visualizer.infoVisualizer[2].textColor = "blue"
*.visualizer.infoVisualizer[3].textColor = "red"
*.tsnClock*.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[4].modules = "*.tsnSwitch1.*.clock[0]"
*.visualizer.infoVisualizer[5].modules = "*.tsnSwitch1.*.clock[1]"
*.visualizer.infoVisualizer[6].modules = "*.tsnSwitch2.*.clock[0]"
*.visualizer.infoVisualizer[7].modules = "*.tsnSwitch2.*.clock[1]"
*.visualizer.infoVisualizer[{4,6}].textColor = "blue"
*.visualizer.infoVisualizer[{5,7}].textColor = "red"
*.tsnDevice*.clock.*.displayStringTextFormat = "diff: %d"
*.detCom.clock.*.displayStringTextFormat = "diff: %d"
*.visualizer.infoVisualizer[4..5].placementHint = "topLeft"
*.visualizer.infoVisualizer[6..7].placementHint = "topRight"