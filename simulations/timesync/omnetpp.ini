[General]
seed-set = 0
sim-time-limit = 20s
description = "abstract"

# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# all oscillators have a constant drift rate (specified with a random distribution for each one) 
# except for the master clocks, which have a random drift rate
#**.clock.oscillator.typename = "RandomDriftOscillator"
#*.timeTransmitter.clock.oscillator.typename = "RandomDriftOscillator"  
*.timeTransmitter.clock.oscillator.typename = "ConstantDriftOscillator" # use ConstantDriftOscillator for testing in new testing scenario.
**.oscillator.changeInterval = 12.5ms
**.oscillator.driftRate = uniform(-100ppm, 100ppm)  
**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
**.oscillator.driftRateChangeUpperLimit = 100ppm
**.oscillator.driftRateChangeLowerLimit = -100ppm

**.kp=8
**.ki=7
**.offsetThreshold = 0 us
**.useC5Grr = ${c5grr=false,true}

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps
*.*.*.eth[*].bitrate = 100Mbps

*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.infoVisualizer[*].displayInfos = true

*.histogramContainer.histograms = {Uplink: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall.xml", Downlink: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall.xml"}

[Config OneMasterClock]
network = TimeSyncNetwork
description = "Basic tree topology with one master clock"

# Uncomment these lines to test out of band time synchronization using the SimpleClockSynchronizer instead of gPTP
#*.tsnClock.gptp.typename = ""
#*.*.gptp.typename = "SimpleClockSynchronizer"
#*.*.gptp.synchronizationInterval = 0.125s
#*.*.gptp.masterClockModule = "^.^.tsnClock.clock"
#*.*.gptp.slaveClockModule = "^.clock"

*.detCom.nwtt.clock.typename = "InstantServoClock"
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnSwitch.clock.adjustDrift = false
*.tsnDevice2.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.timeTransmitter.gptp.masterPorts = ["eth0"]

# TSN switch gPTP bridge master ports
*.detCom.nwtt.gptp.masterPorts = ["tt0", "tt1"]

*.detCom.dstt[*].gptp.masterPorts = ["eth0"]
*.detCom.dstt[*].gptp.slavePort = "tt0"

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "timeTransmitter.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 3
*.visualizer.infoVisualizer[0].modules = "*.timeTransmitter.clock"
*.timeTransmitter.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[1].placementHint = "topLeft"
*.visualizer.infoVisualizer[2].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[2].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

[Config OneMasterClock_StaticDelay]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.dstt[0].delayDownlink = 5ms
*.detCom.dstt[1].delayDownlink = 5ms

[Config OneMasterClock_VarDelay]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")

[Config OneMasterClock_VarDelay_NonQueueing]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.queueingDelayer = false
*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")


[Config OneMasterClock_Uplink]
network = TimeSyncNetworkUplink
description = "Basic tree topology with one master clock"

# Uncomment these lines to test out of band time synchronization using the SimpleClockSynchronizer instead of gPTP
#*.tsnClock.gptp.typename = ""
#*.*.gptp.typename = "SimpleClockSynchronizer"
#*.*.gptp.synchronizationInterval = 0.125s
#*.*.gptp.masterClockModule = "^.^.tsnClock.clock"
#*.*.gptp.slaveClockModule = "^.clock"

*.detCom.nwtt.clock.typename = "InstantServoClock"
*.detCom.nwtt.clock.adjustDrift = false
*.detCom.dstt[*].clock.typename = "InstantServoClock"
*.tsnSwitch.clock.adjustDrift = false
*.tsnDevice1.clock.typename = "InstantServoClock"

# TSN clock gPTP master ports
*.timeTransmitter.gptp.masterPorts = ["eth0"]

*.detCom.dstt[0].gptp.masterPorts = ["tt0", "tt1"]

*.detCom.dstt[1].gptp.masterPorts = ["eth0"]
*.detCom.dstt[1].gptp.slavePort = "tt1"

*.detCom.nwtt.gptp.masterPorts = ["eth0"]
*.detCom.nwtt.gptp.slavePort = "tt0"

# Set all reference clocks to master clock so the time difference can be visualized
**.referenceClock = "timeTransmitter.clock"

# data link visualizer displays gPTP time synchronization packets
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"

*.visualizer.numInfoVisualizers = 3
*.visualizer.infoVisualizer[0].modules = "*.timeTransmitter.clock"
*.timeTransmitter.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
*.visualizer.infoVisualizer[1].placementHint = "topLeft"
*.visualizer.infoVisualizer[2].modules = "*.tsnDevice*.clock"
*.visualizer.infoVisualizer[2].placementHint = "bottom"
*.tsnDevice*.clock.displayStringTextFormat = "diff: %d"
*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"

[Config OneMasterClock_Uplink_StaticDelay]
extends = OneMasterClock_Uplink

*.detCom.dstt[0].delayUplink = 5ms
*.detCom.dstt[1].delayDownlink = 5ms

[Config OneMasterClock_Uplink_VarDelay]
extends = OneMasterClock_Uplink

*.detCom.dstt[0].delayUplink = rngProvider("histogramContainer","Uplink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")

[Config OneMasterClock_VarDelay_Testing]
extends = OneMasterClock
description = "Basic tree topology with one master clock"

*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")
*.detCom.dstt[1].delayDownlink = rngProvider("histogramContainer","Downlink")


# TODO: create a new scenario like downlink 
# --------------------------------------------
## try higher drift rate in detComClock
# oscillator type -> detcomClock ( changing from idealclock to OscillatorBasedClock )
*.detCom.dstt[*].detComClock.typename = OscillatorBasedClock
*.detCom.dstt[*].detComClock.oscillator.driftRate = 100000ppm
*.detCom.nwtt.detComClock.typename = OscillatorBasedClock
*.detCom.nwtt.detComClock.oscillator.driftRate = 100000ppm
# -------------------------------------------- 
