on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  INET_VERSION: 6211cd63ebe479b9b01f5ccecc632d5c2e1952af

jobs:
  fingerprint_test:
    name: "Fingerprint Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        split: [ 0, 1, 2, 3 ]
      fail-fast: false
    container:
      image: ghcr.io/omnetpp/omnetpp:u24.04-6.1.0
    steps:
      - name: Checkout Deterministic6G repository
        uses: actions/checkout@main
        with:
          path: 6GDetCom_Simulator

      - name: Checkout deterministic6g_data repository
        uses: actions/checkout@main
        with:
          repository: DETERMINISTIC6G/deterministic6g_data
          path: deterministic6g_data

      - name: Cache Data Repo
        id: cache-data
        uses: actions/cache@v4
        with:
          path: |
            deterministic6g_data/PD-Wireless-5G-1/**.xml
            deterministic6g_data/PD-Wireless-5G-1/**.csv
            deterministic6g_data/ProcessingDelayDistribution2/**.xml
          key: ${{ runner.os }}-deterministic6g_data-${{ hashFiles('deterministic6g_data/PD-Wireless-5G-1/**') }}-${{ hashFiles('deterministic6g_data/ProcessingDelayDistribution2/**') }}
          save-always: true

      - name: Build PD
        if: steps.cache-data.outputs.cache-hit != 'true'
        shell: bash
        run: |
          source "/root/omnetpp/setenv"
          cd deterministic6g_data/PD-Wireless-5G-1
          pip install requests pyarrow
          export PYTHONPATH=$PYTHONPATH:..
          python3 main.py
          cd ../ProcessingDelayDistribution2
          python3 main.py

      - name: Checkout INET repository
        uses: actions/checkout@main
        with:
          repository: inet-framework/inet
          path: inet
          ref: ${{ env.INET_VERSION }}

      - run: mkdir -p /__w/deterministic6g/6GDetCom_Simulator/ccache

      - name: "Cache ccache"
        uses: actions/cache@v4
        with:
          path: /__w/deterministic6g/6GDetCom_Simulator/ccache
          key: native-ccache-${{ github.run_id }}
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          restore-keys: native-ccache

      - name: "Build projects"
        shell: bash
        env:
          MODE: release
        run: |
          apt update
          apt install -y ccache
          source "/root/omnetpp/setenv"
          cd inet
          source setenv
          export PATH=/usr/lib/ccache:$PATH
          export CCACHE_DIR=/__w/deterministic6g/6GDetCom_Simulator/ccache
          opp_featuretool disable VoipStream DiffServExamples GeneralShowcases Z3GateSchedulingConfigurator TSNShowcases
          make makefiles
          make MODE=release -j $(nproc)
          cd ../6GDetCom_Simulator
          make makefiles
          make

      - name: "Run fingerprint test"
        shell: bash
        run: |
          source "/root/omnetpp/setenv"
          source inet/setenv
          cd 6GDetCom_Simulator/tests/fingerprint
          SPLIT_N=4
          SPLIT_I=${{ matrix.split }}
          inet_fingerprinttest -n $SPLIT_N -i $SPLIT_I

      - name: Upload error artifacts
        if: failure() # This ensures the step runs only if the workflow fails
        uses: actions/upload-artifact@v4
        with:
          name: error-files
          path: 6GDetCom_Simulator/tests/fingerprint/